{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\internships\\\\SysDesignLEETCODE\\\\services\\\\frontend\\\\src\\\\components\\\\nodes\\\\MicroserviceNode.tsx\";\nimport React from 'react';\nimport { Handle, Position } from 'reactflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MicroserviceNode = ({\n  id,\n  data,\n  selected\n}) => {\n  const handleDelete = () => {\n    if (data.onDelete) {\n      data.onDelete(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `custom-node microservice-node ${selected ? 'selected' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-icon\",\n        children: \"\\uD83D\\uDD27\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-label\",\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), data.technology && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-tech\",\n          children: data.technology\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), selected && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-btn\",\n        onClick: handleDelete,\n        title: \"Delete\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), data.description && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-description\",\n      children: data.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), data.instances && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-metrics\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"metric\",\n        children: [\"Instances: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: data.instances\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = MicroserviceNode;\nexport default MicroserviceNode;\nvar _c;\n$RefreshReg$(_c, \"MicroserviceNode\");","map":{"version":3,"names":["React","Handle","Position","jsxDEV","_jsxDEV","MicroserviceNode","id","data","selected","handleDelete","onDelete","className","children","type","position","Top","fileName","_jsxFileName","lineNumber","columnNumber","label","technology","onClick","title","description","instances","Bottom","_c","$RefreshReg$"],"sources":["D:/Downloads/internships/SysDesignLEETCODE/services/frontend/src/components/nodes/MicroserviceNode.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Handle, Position, NodeProps } from 'reactflow';\r\n\r\ninterface MicroserviceData {\r\n  label: string;\r\n  description?: string;\r\n  technology?: string;\r\n  instances?: number;\r\n  onDelete?: (nodeId: string) => void;\r\n}\r\n\r\nconst MicroserviceNode: React.FC<NodeProps<MicroserviceData>> = ({ \r\n  id, \r\n  data, \r\n  selected \r\n}) => {\r\n  const handleDelete = () => {\r\n    if (data.onDelete) {\r\n      data.onDelete(id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`custom-node microservice-node ${selected ? 'selected' : ''}`}>\r\n      <Handle type=\"target\" position={Position.Top} />\r\n      \r\n      <div className=\"node-header\">\r\n        <div className=\"node-icon\">ðŸ”§</div>\r\n        <div className=\"node-title\">\r\n          <div className=\"node-label\">{data.label}</div>\r\n          {data.technology && (\r\n            <div className=\"node-tech\">{data.technology}</div>\r\n          )}\r\n        </div>\r\n        {selected && (\r\n          <button className=\"delete-btn\" onClick={handleDelete} title=\"Delete\">\r\n            âœ•\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      {data.description && (\r\n        <div className=\"node-description\">{data.description}</div>\r\n      )}\r\n      \r\n      {data.instances && (\r\n        <div className=\"node-metrics\">\r\n          <span className=\"metric\">\r\n            Instances: <strong>{data.instances}</strong>\r\n          </span>\r\n        </div>\r\n      )}\r\n      \r\n      <Handle type=\"source\" position={Position.Bottom} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MicroserviceNode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}