{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\internships\\\\SysDesignLEETCODE\\\\services\\\\frontend\\\\src\\\\components\\\\SimpleCanvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport ReactFlow, { addEdge, useNodesState, useEdgesState, Controls, Background, BackgroundVariant } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Component types for the palette\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst componentTypes = [{\n  id: 'microservice',\n  label: 'Microservice',\n  icon: '🔧',\n  color: '#3B82F6',\n  description: 'Independent service'\n}, {\n  id: 'database',\n  label: 'Database',\n  icon: '💾',\n  color: '#F59E0B',\n  description: 'Data storage'\n}, {\n  id: 'cache',\n  label: 'Cache',\n  icon: '⚡',\n  color: '#EF4444',\n  description: 'Fast data access'\n}, {\n  id: 'loadbalancer',\n  label: 'Load Balancer',\n  icon: '⚖️',\n  color: '#10B981',\n  description: 'Traffic distribution'\n}, {\n  id: 'queue',\n  label: 'Message Queue',\n  icon: '📬',\n  color: '#8B5CF6',\n  description: 'Async messaging'\n}, {\n  id: 'apigateway',\n  label: 'API Gateway',\n  icon: '🚪',\n  color: '#06B6D4',\n  description: 'Single entry point'\n}];\n\n// Simple initial setup to test React Flow\nconst initialNodes = [{\n  id: '1',\n  position: {\n    x: 100,\n    y: 100\n  },\n  data: {\n    label: 'API Gateway'\n  },\n  style: {\n    background: '#06B6D4',\n    color: 'white',\n    padding: '10px',\n    borderRadius: '8px'\n  }\n}, {\n  id: '2',\n  position: {\n    x: 100,\n    y: 200\n  },\n  data: {\n    label: 'Microservice'\n  },\n  style: {\n    background: '#3B82F6',\n    color: 'white',\n    padding: '10px',\n    borderRadius: '8px'\n  }\n}, {\n  id: '3',\n  position: {\n    x: 300,\n    y: 200\n  },\n  data: {\n    label: 'Database'\n  },\n  style: {\n    background: '#F59E0B',\n    color: 'white',\n    padding: '10px',\n    borderRadius: '8px'\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  animated: true\n}, {\n  id: 'e2-3',\n  source: '2',\n  target: '3'\n}];\nconst SimpleCanvas = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: BackgroundVariant.Dots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleCanvas, \"mmoxFmHOvuuD77aIm5gUqDEdUKU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = SimpleCanvas;\nexport default SimpleCanvas;\nvar _c;\n$RefreshReg$(_c, \"SimpleCanvas\");","map":{"version":3,"names":["React","useCallback","ReactFlow","addEdge","useNodesState","useEdgesState","Controls","Background","BackgroundVariant","jsxDEV","_jsxDEV","componentTypes","id","label","icon","color","description","initialNodes","position","x","y","data","style","background","padding","borderRadius","initialEdges","source","target","animated","SimpleCanvas","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","width","height","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","variant","Dots","_c","$RefreshReg$"],"sources":["D:/Downloads/internships/SysDesignLEETCODE/services/frontend/src/components/SimpleCanvas.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  Node,\r\n  Edge,\r\n  addEdge,\r\n  Connection,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n  Background,\r\n  BackgroundVariant,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\n// Component types for the palette\r\ninterface ComponentType {\r\n  id: string;\r\n  label: string;\r\n  icon: string;\r\n  color: string;\r\n  description: string;\r\n}\r\n\r\nconst componentTypes: ComponentType[] = [\r\n  {\r\n    id: 'microservice',\r\n    label: 'Microservice',\r\n    icon: '🔧',\r\n    color: '#3B82F6',\r\n    description: 'Independent service'\r\n  },\r\n  {\r\n    id: 'database',\r\n    label: 'Database',\r\n    icon: '💾',\r\n    color: '#F59E0B',\r\n    description: 'Data storage'\r\n  },\r\n  {\r\n    id: 'cache',\r\n    label: 'Cache',\r\n    icon: '⚡',\r\n    color: '#EF4444',\r\n    description: 'Fast data access'\r\n  },\r\n  {\r\n    id: 'loadbalancer',\r\n    label: 'Load Balancer',\r\n    icon: '⚖️',\r\n    color: '#10B981',\r\n    description: 'Traffic distribution'\r\n  },\r\n  {\r\n    id: 'queue',\r\n    label: 'Message Queue',\r\n    icon: '📬',\r\n    color: '#8B5CF6',\r\n    description: 'Async messaging'\r\n  },\r\n  {\r\n    id: 'apigateway',\r\n    label: 'API Gateway',\r\n    icon: '🚪',\r\n    color: '#06B6D4',\r\n    description: 'Single entry point'\r\n  }\r\n];\r\n\r\n// Simple initial setup to test React Flow\r\nconst initialNodes: Node[] = [\r\n  {\r\n    id: '1',\r\n    position: { x: 100, y: 100 },\r\n    data: { label: 'API Gateway' },\r\n    style: { background: '#06B6D4', color: 'white', padding: '10px', borderRadius: '8px' }\r\n  },\r\n  {\r\n    id: '2',\r\n    position: { x: 100, y: 200 },\r\n    data: { label: 'Microservice' },\r\n    style: { background: '#3B82F6', color: 'white', padding: '10px', borderRadius: '8px' }\r\n  },\r\n  {\r\n    id: '3',\r\n    position: { x: 300, y: 200 },\r\n    data: { label: 'Database' },\r\n    style: { background: '#F59E0B', color: 'white', padding: '10px', borderRadius: '8px' }\r\n  }\r\n];\r\n\r\nconst initialEdges: Edge[] = [\r\n  { id: 'e1-2', source: '1', target: '2', animated: true },\r\n  { id: 'e2-3', source: '2', target: '3' }\r\n];\r\n\r\nconst SimpleCanvas: React.FC = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n\r\n  const onConnect = useCallback(\r\n    (params: Connection) => setEdges((eds: Edge[]) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '500px' }}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        fitView\r\n      >\r\n        <Controls />\r\n        <Background variant={BackgroundVariant.Dots} />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}