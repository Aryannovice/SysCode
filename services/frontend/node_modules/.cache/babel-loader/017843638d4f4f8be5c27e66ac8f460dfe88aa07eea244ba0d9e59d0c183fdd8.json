{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\internships\\\\SysDesignLEETCODE\\\\services\\\\frontend\\\\src\\\\components\\\\SystemDesignCanvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport ReactFlow, { addEdge, useNodesState, useEdgesState, Controls, Background, BackgroundVariant, ConnectionMode } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport './SystemDesignCanvas.css';\n\n// Custom Node Components\nimport MicroserviceNode from './nodes/MicroserviceNode';\nimport DatabaseNode from './nodes/DatabaseNode';\nimport LoadBalancerNode from './nodes/LoadBalancerNode';\nimport CacheNode from './nodes/CacheNode';\nimport QueueNode from './nodes/QueueNode';\nimport ApiGatewayNode from './nodes/ApiGatewayNode';\n\n// Component Palette\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst componentTypes = [{\n  id: 'microservice',\n  label: 'Microservice',\n  nodeType: 'microservice',\n  icon: '🔧',\n  color: '#3B82F6',\n  description: 'Independent service handling specific business logic'\n}, {\n  id: 'database',\n  label: 'Database',\n  nodeType: 'database',\n  icon: '💾',\n  color: '#F59E0B',\n  description: 'Data storage and persistence layer'\n}, {\n  id: 'cache',\n  label: 'Cache',\n  nodeType: 'cache',\n  icon: '⚡',\n  color: '#EF4444',\n  description: 'High-speed data access layer (Redis, Memcached)'\n}, {\n  id: 'load_balancer',\n  label: 'Load Balancer',\n  nodeType: 'loadBalancer',\n  icon: '⚖️',\n  color: '#10B981',\n  description: 'Distributes traffic across multiple instances'\n}, {\n  id: 'queue',\n  label: 'Message Queue',\n  nodeType: 'queue',\n  icon: '📬',\n  color: '#8B5CF6',\n  description: 'Asynchronous message processing (RabbitMQ, Kafka)'\n}, {\n  id: 'api_gateway',\n  label: 'API Gateway',\n  nodeType: 'apiGateway',\n  icon: '🚪',\n  color: '#06B6D4',\n  description: 'Single entry point for all client requests'\n}];\n\n// Node types for ReactFlow\nconst nodeTypes = {\n  microservice: MicroserviceNode,\n  database: DatabaseNode,\n  cache: CacheNode,\n  loadBalancer: LoadBalancerNode,\n  queue: QueueNode,\n  apiGateway: ApiGatewayNode\n};\n\n// Initial nodes and edges for demo\nconst initialNodes = [{\n  id: 'api-gateway-1',\n  type: 'apiGateway',\n  position: {\n    x: 400,\n    y: 100\n  },\n  data: {\n    label: 'API Gateway',\n    description: 'Main entry point',\n    metrics: {\n      requests: '1.2K/sec',\n      latency: '45ms'\n    }\n  }\n}, {\n  id: 'load-balancer-1',\n  type: 'loadBalancer',\n  position: {\n    x: 400,\n    y: 250\n  },\n  data: {\n    label: 'Load Balancer',\n    description: 'Traffic distribution',\n    algorithm: 'Round Robin'\n  }\n}, {\n  id: 'service-1',\n  type: 'microservice',\n  position: {\n    x: 200,\n    y: 400\n  },\n  data: {\n    label: 'User Service',\n    description: 'User management',\n    technology: 'Node.js'\n  }\n}, {\n  id: 'service-2',\n  type: 'microservice',\n  position: {\n    x: 400,\n    y: 400\n  },\n  data: {\n    label: 'Order Service',\n    description: 'Order processing',\n    technology: 'Python'\n  }\n}, {\n  id: 'service-3',\n  type: 'microservice',\n  position: {\n    x: 600,\n    y: 400\n  },\n  data: {\n    label: 'Payment Service',\n    description: 'Payment processing',\n    technology: 'Java'\n  }\n}, {\n  id: 'database-1',\n  type: 'database',\n  position: {\n    x: 300,\n    y: 550\n  },\n  data: {\n    label: 'PostgreSQL',\n    description: 'Primary database',\n    type: 'SQL'\n  }\n}, {\n  id: 'cache-1',\n  type: 'cache',\n  position: {\n    x: 500,\n    y: 550\n  },\n  data: {\n    label: 'Redis Cache',\n    description: 'Session storage',\n    type: 'In-Memory'\n  }\n}];\nconst initialEdges = [{\n  id: 'api-to-lb',\n  source: 'api-gateway-1',\n  target: 'load-balancer-1',\n  type: 'smoothstep',\n  animated: true\n}, {\n  id: 'lb-to-user',\n  source: 'load-balancer-1',\n  target: 'service-1',\n  type: 'smoothstep'\n}, {\n  id: 'lb-to-order',\n  source: 'load-balancer-1',\n  target: 'service-2',\n  type: 'smoothstep'\n}, {\n  id: 'lb-to-payment',\n  source: 'load-balancer-1',\n  target: 'service-3',\n  type: 'smoothstep'\n}, {\n  id: 'user-to-db',\n  source: 'service-1',\n  target: 'database-1',\n  type: 'smoothstep'\n}, {\n  id: 'order-to-db',\n  source: 'service-2',\n  target: 'database-1',\n  type: 'smoothstep'\n}, {\n  id: 'services-to-cache',\n  source: 'service-2',\n  target: 'cache-1',\n  type: 'smoothstep'\n}];\nconst SystemDesignCanvas = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedComponent, setSelectedComponent] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const onConnect = useCallback(params => setEdges(eds => addEdge({\n    ...params,\n    type: 'smoothstep',\n    animated: Math.random() > 0.5 // Randomly animate some connections\n  }, eds)), [setEdges]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    var _closest;\n    event.preventDefault();\n    if (!selectedComponent) return;\n    const reactFlowBounds = (_closest = event.target.closest('.react-flow')) === null || _closest === void 0 ? void 0 : _closest.getBoundingClientRect();\n    if (!reactFlowBounds) return;\n    const position = {\n      x: event.clientX - reactFlowBounds.left - 75,\n      // Center the node\n      y: event.clientY - reactFlowBounds.top - 50\n    };\n    const newNode = {\n      id: `${selectedComponent.nodeType}-${Date.now()}`,\n      type: selectedComponent.nodeType,\n      position,\n      data: {\n        label: selectedComponent.label,\n        description: selectedComponent.description,\n        onDelete: nodeId => deleteNode(nodeId)\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n    setSelectedComponent(null);\n    setIsDragging(false);\n  }, [selectedComponent, setNodes]);\n  const onDragStart = useCallback(component => {\n    setSelectedComponent(component);\n    setIsDragging(true);\n  }, []);\n  const deleteNode = useCallback(nodeId => {\n    setNodes(nds => nds.filter(n => n.id !== nodeId));\n    setEdges(eds => eds.filter(e => e.source !== nodeId && e.target !== nodeId));\n  }, [setNodes, setEdges]);\n  const clearCanvas = useCallback(() => {\n    setNodes([]);\n    setEdges([]);\n  }, [setNodes, setEdges]);\n  const autoLayout = useCallback(() => {\n    // Simple auto-layout logic\n    const layoutNodes = nodes.map((node, index) => {\n      const col = index % 3;\n      const row = Math.floor(index / 3);\n      return {\n        ...node,\n        position: {\n          x: 100 + col * 250,\n          y: 100 + row * 200\n        }\n      };\n    });\n    setNodes(layoutNodes);\n  }, [nodes, setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"system-design-canvas\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component-palette\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"palette-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Components\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"palette-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: autoLayout,\n            className: \"action-btn\",\n            title: \"Auto Layout\",\n            children: \"\\uD83D\\uDCD0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: clearCanvas,\n            className: \"action-btn danger\",\n            title: \"Clear Canvas\",\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"component-grid\",\n        children: componentTypes.map(component => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `component-item ${isDragging && (selectedComponent === null || selectedComponent === void 0 ? void 0 : selectedComponent.id) === component.id ? 'dragging' : ''}`,\n          draggable: true,\n          onDragStart: () => onDragStart(component),\n          style: {\n            borderColor: component.color\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"component-icon\",\n            style: {\n              backgroundColor: component.color\n            },\n            children: component.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"component-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"component-label\",\n              children: component.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"component-desc\",\n              children: component.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, component.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"palette-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDCA1 Drag components to canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDD17 Connect nodes by dragging from handles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-area\",\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onDrop: onDrop,\n        onDragOver: onDragOver,\n        nodeTypes: nodeTypes,\n        connectionMode: ConnectionMode.Loose,\n        fitView: true,\n        className: \"react-flow-canvas\",\n        children: [/*#__PURE__*/_jsxDEV(Background, {\n          variant: BackgroundVariant.Dots,\n          gap: 20,\n          size: 1,\n          color: \"rgba(16, 185, 129, 0.3)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {\n          position: \"bottom-right\",\n          showZoom: true,\n          showFitView: true,\n          showInteractive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemDesignCanvas, \"yO+fS61Uls7V8yVkRJXpHx9kGyI=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = SystemDesignCanvas;\nexport default SystemDesignCanvas;\nvar _c;\n$RefreshReg$(_c, \"SystemDesignCanvas\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","addEdge","useNodesState","useEdgesState","Controls","Background","BackgroundVariant","ConnectionMode","MicroserviceNode","DatabaseNode","LoadBalancerNode","CacheNode","QueueNode","ApiGatewayNode","jsxDEV","_jsxDEV","componentTypes","id","label","nodeType","icon","color","description","nodeTypes","microservice","database","cache","loadBalancer","queue","apiGateway","initialNodes","type","position","x","y","data","metrics","requests","latency","algorithm","technology","initialEdges","source","target","animated","SystemDesignCanvas","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedComponent","setSelectedComponent","isDragging","setIsDragging","onConnect","params","eds","Math","random","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","_closest","reactFlowBounds","closest","getBoundingClientRect","clientX","left","clientY","top","newNode","Date","now","onDelete","nodeId","deleteNode","nds","concat","onDragStart","component","filter","n","e","clearCanvas","autoLayout","layoutNodes","map","node","index","col","row","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","draggable","style","borderColor","backgroundColor","connectionMode","Loose","fitView","variant","Dots","gap","size","showZoom","showFitView","showInteractive","_c","$RefreshReg$"],"sources":["D:/Downloads/internships/SysDesignLEETCODE/services/frontend/src/components/SystemDesignCanvas.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\r\nimport ReactFlow, {\r\n  Node,\r\n  Edge,\r\n  addEdge,\r\n  Connection,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n  Background,\r\n  BackgroundVariant,\r\n  NodeTypes,\r\n  ConnectionMode,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport './SystemDesignCanvas.css';\r\n\r\n// Custom Node Components\r\nimport MicroserviceNode from './nodes/MicroserviceNode';\r\nimport DatabaseNode from './nodes/DatabaseNode';\r\nimport LoadBalancerNode from './nodes/LoadBalancerNode';\r\nimport CacheNode from './nodes/CacheNode';\r\nimport QueueNode from './nodes/QueueNode';\r\nimport ApiGatewayNode from './nodes/ApiGatewayNode';\r\n\r\n// Component Palette\r\ninterface ComponentType {\r\n  id: string;\r\n  label: string;\r\n  nodeType: string;\r\n  icon: string;\r\n  color: string;\r\n  description: string;\r\n}\r\n\r\nconst componentTypes: ComponentType[] = [\r\n  {\r\n    id: 'microservice',\r\n    label: 'Microservice',\r\n    nodeType: 'microservice',\r\n    icon: '🔧',\r\n    color: '#3B82F6',\r\n    description: 'Independent service handling specific business logic'\r\n  },\r\n  {\r\n    id: 'database',\r\n    label: 'Database',\r\n    nodeType: 'database',\r\n    icon: '💾',\r\n    color: '#F59E0B',\r\n    description: 'Data storage and persistence layer'\r\n  },\r\n  {\r\n    id: 'cache',\r\n    label: 'Cache',\r\n    nodeType: 'cache',\r\n    icon: '⚡',\r\n    color: '#EF4444',\r\n    description: 'High-speed data access layer (Redis, Memcached)'\r\n  },\r\n  {\r\n    id: 'load_balancer',\r\n    label: 'Load Balancer',\r\n    nodeType: 'loadBalancer',\r\n    icon: '⚖️',\r\n    color: '#10B981',\r\n    description: 'Distributes traffic across multiple instances'\r\n  },\r\n  {\r\n    id: 'queue',\r\n    label: 'Message Queue',\r\n    nodeType: 'queue',\r\n    icon: '📬',\r\n    color: '#8B5CF6',\r\n    description: 'Asynchronous message processing (RabbitMQ, Kafka)'\r\n  },\r\n  {\r\n    id: 'api_gateway',\r\n    label: 'API Gateway',\r\n    nodeType: 'apiGateway',\r\n    icon: '🚪',\r\n    color: '#06B6D4',\r\n    description: 'Single entry point for all client requests'\r\n  }\r\n];\r\n\r\n// Node types for ReactFlow\r\nconst nodeTypes: NodeTypes = {\r\n  microservice: MicroserviceNode,\r\n  database: DatabaseNode,\r\n  cache: CacheNode,\r\n  loadBalancer: LoadBalancerNode,\r\n  queue: QueueNode,\r\n  apiGateway: ApiGatewayNode,\r\n};\r\n\r\n// Initial nodes and edges for demo\r\nconst initialNodes: Node[] = [\r\n  {\r\n    id: 'api-gateway-1',\r\n    type: 'apiGateway',\r\n    position: { x: 400, y: 100 },\r\n    data: { \r\n      label: 'API Gateway',\r\n      description: 'Main entry point',\r\n      metrics: { requests: '1.2K/sec', latency: '45ms' }\r\n    },\r\n  },\r\n  {\r\n    id: 'load-balancer-1',\r\n    type: 'loadBalancer',\r\n    position: { x: 400, y: 250 },\r\n    data: { \r\n      label: 'Load Balancer',\r\n      description: 'Traffic distribution',\r\n      algorithm: 'Round Robin'\r\n    },\r\n  },\r\n  {\r\n    id: 'service-1',\r\n    type: 'microservice',\r\n    position: { x: 200, y: 400 },\r\n    data: { \r\n      label: 'User Service',\r\n      description: 'User management',\r\n      technology: 'Node.js'\r\n    },\r\n  },\r\n  {\r\n    id: 'service-2',\r\n    type: 'microservice',\r\n    position: { x: 400, y: 400 },\r\n    data: { \r\n      label: 'Order Service',\r\n      description: 'Order processing',\r\n      technology: 'Python'\r\n    },\r\n  },\r\n  {\r\n    id: 'service-3',\r\n    type: 'microservice',\r\n    position: { x: 600, y: 400 },\r\n    data: { \r\n      label: 'Payment Service',\r\n      description: 'Payment processing',\r\n      technology: 'Java'\r\n    },\r\n  },\r\n  {\r\n    id: 'database-1',\r\n    type: 'database',\r\n    position: { x: 300, y: 550 },\r\n    data: { \r\n      label: 'PostgreSQL',\r\n      description: 'Primary database',\r\n      type: 'SQL'\r\n    },\r\n  },\r\n  {\r\n    id: 'cache-1',\r\n    type: 'cache',\r\n    position: { x: 500, y: 550 },\r\n    data: { \r\n      label: 'Redis Cache',\r\n      description: 'Session storage',\r\n      type: 'In-Memory'\r\n    },\r\n  }\r\n];\r\n\r\nconst initialEdges: Edge[] = [\r\n  {\r\n    id: 'api-to-lb',\r\n    source: 'api-gateway-1',\r\n    target: 'load-balancer-1',\r\n    type: 'smoothstep',\r\n    animated: true,\r\n  },\r\n  {\r\n    id: 'lb-to-user',\r\n    source: 'load-balancer-1',\r\n    target: 'service-1',\r\n    type: 'smoothstep',\r\n  },\r\n  {\r\n    id: 'lb-to-order',\r\n    source: 'load-balancer-1',\r\n    target: 'service-2',\r\n    type: 'smoothstep',\r\n  },\r\n  {\r\n    id: 'lb-to-payment',\r\n    source: 'load-balancer-1',\r\n    target: 'service-3',\r\n    type: 'smoothstep',\r\n  },\r\n  {\r\n    id: 'user-to-db',\r\n    source: 'service-1',\r\n    target: 'database-1',\r\n    type: 'smoothstep',\r\n  },\r\n  {\r\n    id: 'order-to-db',\r\n    source: 'service-2',\r\n    target: 'database-1',\r\n    type: 'smoothstep',\r\n  },\r\n  {\r\n    id: 'services-to-cache',\r\n    source: 'service-2',\r\n    target: 'cache-1',\r\n    type: 'smoothstep',\r\n  }\r\n];\r\n\r\nconst SystemDesignCanvas: React.FC = () => {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\r\n  const [selectedComponent, setSelectedComponent] = useState<ComponentType | null>(null);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const onConnect = useCallback(\r\n    (params: Connection) => setEdges((eds) => addEdge({\r\n      ...params,\r\n      type: 'smoothstep',\r\n      animated: Math.random() > 0.5, // Randomly animate some connections\r\n    }, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  const onDragOver = useCallback((event: React.DragEvent) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (event: React.DragEvent) => {\r\n      event.preventDefault();\r\n\r\n      if (!selectedComponent) return;\r\n\r\n      const reactFlowBounds = (event.target as Element).closest('.react-flow')?.getBoundingClientRect();\r\n      if (!reactFlowBounds) return;\r\n\r\n      const position = {\r\n        x: event.clientX - reactFlowBounds.left - 75, // Center the node\r\n        y: event.clientY - reactFlowBounds.top - 50,\r\n      };\r\n\r\n      const newNode: Node = {\r\n        id: `${selectedComponent.nodeType}-${Date.now()}`,\r\n        type: selectedComponent.nodeType,\r\n        position,\r\n        data: {\r\n          label: selectedComponent.label,\r\n          description: selectedComponent.description,\r\n          onDelete: (nodeId: string) => deleteNode(nodeId),\r\n        },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n      setSelectedComponent(null);\r\n      setIsDragging(false);\r\n    },\r\n    [selectedComponent, setNodes]\r\n  );\r\n\r\n  const onDragStart = useCallback((component: ComponentType) => {\r\n    setSelectedComponent(component);\r\n    setIsDragging(true);\r\n  }, []);\r\n\r\n  const deleteNode = useCallback((nodeId: string) => {\r\n    setNodes((nds) => nds.filter((n) => n.id !== nodeId));\r\n    setEdges((eds) => eds.filter((e) => e.source !== nodeId && e.target !== nodeId));\r\n  }, [setNodes, setEdges]);\r\n\r\n  const clearCanvas = useCallback(() => {\r\n    setNodes([]);\r\n    setEdges([]);\r\n  }, [setNodes, setEdges]);\r\n\r\n  const autoLayout = useCallback(() => {\r\n    // Simple auto-layout logic\r\n    const layoutNodes = nodes.map((node, index) => {\r\n      const col = index % 3;\r\n      const row = Math.floor(index / 3);\r\n      return {\r\n        ...node,\r\n        position: {\r\n          x: 100 + col * 250,\r\n          y: 100 + row * 200,\r\n        },\r\n      };\r\n    });\r\n    setNodes(layoutNodes);\r\n  }, [nodes, setNodes]);\r\n\r\n  return (\r\n    <div className=\"system-design-canvas\">\r\n      {/* Component Palette */}\r\n      <div className=\"component-palette\">\r\n        <div className=\"palette-header\">\r\n          <h3>Components</h3>\r\n          <div className=\"palette-actions\">\r\n            <button onClick={autoLayout} className=\"action-btn\" title=\"Auto Layout\">\r\n              📐\r\n            </button>\r\n            <button onClick={clearCanvas} className=\"action-btn danger\" title=\"Clear Canvas\">\r\n              🗑️\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"component-grid\">\r\n          {componentTypes.map((component) => (\r\n            <div\r\n              key={component.id}\r\n              className={`component-item ${isDragging && selectedComponent?.id === component.id ? 'dragging' : ''}`}\r\n              draggable\r\n              onDragStart={() => onDragStart(component)}\r\n              style={{ borderColor: component.color }}\r\n            >\r\n              <div className=\"component-icon\" style={{ backgroundColor: component.color }}>\r\n                {component.icon}\r\n              </div>\r\n              <div className=\"component-info\">\r\n                <div className=\"component-label\">{component.label}</div>\r\n                <div className=\"component-desc\">{component.description}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"palette-footer\">\r\n          <p>💡 Drag components to canvas</p>\r\n          <p>🔗 Connect nodes by dragging from handles</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* React Flow Canvas */}\r\n      <div className=\"canvas-area\">\r\n        <ReactFlow\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          onDrop={onDrop}\r\n          onDragOver={onDragOver}\r\n          nodeTypes={nodeTypes}\r\n          connectionMode={ConnectionMode.Loose}\r\n          fitView\r\n          className=\"react-flow-canvas\"\r\n        >\r\n          <Background \r\n            variant={BackgroundVariant.Dots} \r\n            gap={20} \r\n            size={1}\r\n            color=\"rgba(16, 185, 129, 0.3)\"\r\n          />\r\n          <Controls \r\n            position=\"bottom-right\"\r\n            showZoom={true}\r\n            showFitView={true}\r\n            showInteractive={true}\r\n          />\r\n        </ReactFlow>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemDesignCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}